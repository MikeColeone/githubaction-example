# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven github action examples

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: docker push
        run: |
          ${{secrets.DOCKER_LOGIN}}
          docker build . ${{secrets.ALIYUN_REPOSITORY}}
          docker push ${{secrets.ALIYUN_REPOSITORY}}
  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@main
        with:
          host: ${{secrets.ALIYUN_HOST}}
          username: ${{secrets.ALIYUN_USER}}
          password: ${{secrets.ALIYUN.PASSWORD}}
          script: |
            ${{secrets.DOCKER_LOGIN}}
            docker stop $(docker ps --filter ancestor=${{secrets.ALIYUN_REPOSITORY}}) 
            docker rm -v $(docker ps --filter ancestor=${{secrets.ALIYUN_REPOSITORY}} -q) 
            docker rmi -f $(docker images ${{secrets.ALIYUN_REPOSITORY}} -q)
            docker pull ${{secrets.ALIYUN_REPOSITORY}}
            docker run - p 8080:8080 -d ${{secrets.ALIYUN_REPOSITORY}}


