# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven github action examples

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
#      - name: docker push
#        run: |
#          docker build . ${{secrets.ALIYUN_HOST}}
#          docker push ${{secrets.ALIYUN_HOST}}
      - name: release aliyun
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
            #私钥
            SSH_PRIVATE_KEY: ${{ secrets.SECRET }}
            #SCp参数
            ARGS: "-rltgoDzvO --delete"
            #源目录
            SOURCE: "./"
            #服务器Ip:换成你的服务器iP
            REMOTE_HOST: ${{ secrets.ALIYUN_HOST }}
            #用户
            REMOTE_USER: "root"
            #目标地址
            TARGET: "/root/university-selection_Backend"
#
#  deploy:
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: deploy
#        uses: appleboy/ssh-action@main
#        with:
#          host :${{}}
#          username: ${{}}
#          passoword :${{}}
#          script :|
#            ${{}}
#            docker stop $(docker ps -- filter ancestor=${{}})
#            docker rm -v $(docker ps - filter ancestor=${{}} -q)
#            docker rmi -f $(docker images ${{}} -q)
#            docker pull ${{}}
#            docker run - p 8080:8080 -d ${{}}
#

